---
layout:     default

title:      "Hello 2016"
---

## 前言

thewangcj 的 Blog 就这么开通了。

[跳过废话，直接看技术实现 ](#build) 



2016 年，thewangcj 总算有个地方可以好好写点东西了。


 不知道是从哪传来的老梗说是:“一个程序猿拿起毛笔练毛笔字，写下了苍劲有力的 Hello World，然后当这个程序猿死后，墓碑上刻的还是 Hello Word”!

 于是标题就这么来了。


对于每一位程序员， 拥有一个个人博客应该都是一个执念，于是我在博客园上申请了一个，然而写了第一篇就没了下文，
一方面是因为懒，另一方面是觉得自己是在是太菜，没啥会的，自然也就写不出来。

然而上了大三，也开始学了一些东西，比如 Python 和 Node.js 之类的,想着可以记录下学习的历程，于是就这么开始了。

<p id = "build"></p>
---

## 正文

接下来说说搭建这个博客的技术细节。  

正好之前就有关注过 [GitHub Pages](https://pages.github.com/) + [Jekyll](http://jekyllrb.com/) 快速 Building Blog 的技术方案，非常轻松时尚。
然后看了 <a href="http://yuguo.us/weblog/">yuguo</a> 的一些文章，然后就你懂得开始了。

其优点非常明显：  

* **Markdown** 带来的优雅写作体验
* 非常熟悉的 Git workflow ，**Git Commit 即 Blog Post**
* 利用 GitHub Pages 的域名和免费无限空间，不用自己折腾主机
* 如果需要自定义域名，也只需要简单改改 DNS 加个 CNAME 就好了 
* Jekyll 的自定制非常容易，基本就是个模版引擎


本来觉得最大的缺点可能是 GitHub 在国内访问起来太慢，虽然也不会有很多人访问我的博客……

---

配置的过程中也没遇到什么坑，基本就是 Git 的流程，相当顺手。

大的 Jekyll 主题上直接 fork 了 Hux Blog，博客底部有。

本地调试环境需要 `gem install jekyll`，我是在Windows下进行的配置，网上有很多教程，不在赘述。

fork 后使用 git clone git@github.com:yourname/yourname.github.io.git 下载到本地，
然后将 _config.yml 中的内容改成你自己的，配置项都见文知意，非常简单。
将 _posts (这里是你要发布的原始文章)中的文件删除，当然你可以向我一样留一篇参考。
接下来起一个本地服务看一下现在的效果：
在命令行中进入到你博客的本地文件夹

    jekyll build
    jekyll serve

即可在 http://127.0.0.1:4000/ 中访问到你的博客.
接下来就是孜孜不倦的写博客啦！

## 后记
其实之前一直以为建一个博客挺难的，真正做了以后发现是让自己动起来更难。
后续准备改一下代码块的默认样式，加一些动画效果以及北京音乐啥的。


—— thewancj 后记于 2016.10


